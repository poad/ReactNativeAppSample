name: Upload to TestFlight
 
on:
  push:
    branches:
    - main 
  # pull_request:
  #   branches:
  #     - main


jobs:
  build:
    runs-on: macos-latest

    strategy:
      matrix:
        node-version: [14.x]

    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Xcode version
        run: sudo xcode-select -switch /Applications/Xcode_12.3.app/
      - name: Show Xcode version
        run: xcodebuild -version
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Setup watchman
        run: |
          TEMP=$(mktemp -d)
          cd ${TEMP}
          curl -sSLo watchman-v2020.12.21.00-macos.zip https://github.com/facebook/watchman/releases/download/v2020.12.21.00/watchman-v2020.12.21.00-macos.zip
          unzip watchman-*-macos.zip
          sudo mkdir -p /usr/local/{bin,lib} /usr/local/var/run/watchman
          sudo cp watchman-v2020.12.21.00-macos/bin/* /usr/local/bin
          sudo cp watchman-v2020.12.21.00-macos/lib/* /usr/local/lib
          sudo chmod 755 /usr/local/bin/watchman
          sudo chmod 2777 /usr/local/var/run/watchman
          cd ${HOME}
          rm -rf ${TEMP}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup CocoaPods
        run: |
          yarn install

      - name: "#️⃣ Update Build Number"
        id: buildnumber
        uses: poad/xcode-build-number-auto-update@v1
        with:
          path: ./ios/ReactNativeAppSample/Info.plist
          new-number: ${{ github.run_number }}

      - name: Import iOS CodeSign Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        id: develop-certificate
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_FILE_BASE64 }}
          p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}

      - name: Import iOS CodeSign Certificates (for distibution)
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          create-keychain: false
          keychain-password: ${{ steps.develop-certificate.outputs.keychain-password }}
          p12-file-base64: ${{ secrets.DISTRIBUTION_CERTIFICATES_FILE_BASE64 }}
          p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}

      - name: Import Android CodeSign Certificates
        run: |
          ANDROID_CERTIFICATES_FILE_PATH=$(pwd)/android/keystore.p12
          echo "ANDROID_CERTIFICATES_FILE_PATH=${ANDROID_CERTIFICATES_FILE_PATH}" >> $GITHUB_ENV
          echo ${{ secrets.ANDROID_CERTIFICATES_FILE_BASE64 }} | base64 -D -o ${ANDROID_CERTIFICATES_FILE_PATH}

      - name: Download Provisioning Profiles
        uses: apple-actions/download-provisioning-profiles@v1
        with: 
          bundle-id: 'com.github.poad.*'
          profile-type: 'IOS_APP_DEVELOPMENT'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

      - name: Download Provisioning Profiles (for distibution)
        uses: apple-actions/download-provisioning-profiles@v1
        with: 
          bundle-id: 'com.github.poad.*'
          profile-type: 'IOS_APP_STORE'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

      - name: Set Default Scheme
        run: |
          cd ReactNativeAppSample/ios
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default

      - name: Generate exportOptions.plist
        env:
          TEAM_ID: ${{ secrets.TEAM_ID }}
        run: |
          cd ReactNativeAppSample/ios
          cat exportOptions.plist.template | sed -e "s/{TEAM_ID}/${TEAM_ID}/" > ./exportOptions.plist

      - name: Test
        run: |
          yarn test

      - name: Build and test for android
        run: |
          cd ReactNativeAppSample/android
          ./gradlew assembleDebug
          ./gradlew test

      - name: iOS app archive and export
        run: |
          cd ReactNativeAppSample/ios
          sudo gem install cocoapods && cd ReactNativeAppSample/ios && pod install --repo-update && pod update
          echo "-----------------------"
          xcodebuild clean archive -workspace ReactNativeAppSample.xcworkspace -scheme ReactNativeAppSample -sdk iphoneos -configuration Release -archivePath $(pwd)/build/appname.xcarchive
          echo "-----------------------"
          xcodebuild -exportArchive -archivePath ./archive.xcarchive -exportPath ./build -exportOptionsPlist ./exportOptions.plist

      - name: Lookup IPA file
        run: echo "ipa_file_path=$(ls ./ios/build/*.ipa)" >> $GITHUB_ENV

      - name: 'Upload app to TestFlight'
        uses: apple-actions/upload-testflight-build@v1
        with: 
          app-path: ${{ env.ipa_file_path }}
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
